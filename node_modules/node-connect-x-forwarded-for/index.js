/**
 * Exports the middleware factory.
 */
var _ = require('underscore');

function firstUntrusted(addresses, trustedAddresses) {
	return _.detect(addresses, function (address) {
		return _.any(trustedAddresses, function (trustedAddress) {
			return address !== trustedAddress;
		});
	});
}

module.exports = function (options) {
	options = options || {};

	var trustedAddresses = Array.isArray(options.trustedAddress)
		? options.trustedAddress : typeof options.trustedAddress !== 'undefined'
		? [options.trustedAddress] : [];

	var getRemoteAddress = function (req) {
		var xForwardedFor = _.compact((req.headers['x-forwarded-for'] || req.connection.remoteAddress).split(/[\s,]+/));

		return trustedAddresses.length === 0 ? xForwardedFor.pop()
			: firstUntrusted(xForwardedFor.reverse().concat(req.connection.remoteAddress), trustedAddresses);
	};

	// Middleware function closure
	return function (req, _, next) {
		var newRemoteAddress = getRemoteAddress(req);

        if (typeof newRemoteAddress !== 'undefined') {
            Object.defineProperty(req.connection, 'remoteAddress', {
                'value': newRemoteAddress
            });
        }

		next();
	};
};
